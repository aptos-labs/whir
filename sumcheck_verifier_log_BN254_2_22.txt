    Finished `release` profile [optimized + debuginfo] target(s) in 0.05s
     Running `target/release/main --type PCS --security-level 100 --num-variables 22 --evaluations 1 --rate 3 --fold 4 --sec ConjectureList --field Field256 --hash Blake3 --reps 1`
=========================================
Whir (PCS) üå™Ô∏è
Field: Field256 and MT: Blake3
Number of variables: 22, folding factor: ConstantFromSecondRound(4, 4)
Security level: 100 bits using ConjectureList security and 22 bits of PoW
initial_folding_pow_bits: 0
Num_queries: 26, rate: 2^-3, pow_bits: 22, ood_samples: 1, folding_pow: 0
Num_queries: 13, rate: 2^-6, pow_bits: 22, ood_samples: 1, folding_pow: 0
Num_queries: 9, rate: 2^-9, pow_bits: 19, ood_samples: 1, folding_pow: 0
Num_queries: 7, rate: 2^-12, pow_bits: 16, ood_samples: 1, folding_pow: 0
final_queries: 6, final_rate: 2^-15, final_pow_bits: 10, final_folding_pow_bits: 0
------------------------------------
Round by round soundness analysis:
------------------------------------
175.0 bits -- OOD commitment
224.0 bits -- (x4) prox gaps: 225.0, sumcheck: 224.0, pow: 0.0
175.0 bits -- OOD sample
100.0 bits -- query error: 78.0, combination: 217.2, pow: 22.0
222.0 bits -- (x4) prox gaps: 223.0, sumcheck: 222.0, pow: 0.0
175.0 bits -- OOD sample
100.0 bits -- query error: 78.0, combination: 216.2, pow: 22.0
220.0 bits -- (x4) prox gaps: 221.0, sumcheck: 220.0, pow: 0.0
175.0 bits -- OOD sample
100.0 bits -- query error: 81.0, combination: 214.7, pow: 19.0
218.0 bits -- (x4) prox gaps: 219.0, sumcheck: 218.0, pow: 0.0
175.0 bits -- OOD sample
100.0 bits -- query error: 84.0, combination: 213.0, pow: 16.0
216.0 bits -- (x4) prox gaps: 217.0, sumcheck: 216.0, pow: 0.0
100.0 bits -- query error: 90.0, pow: 10.0
263.0 bits -- (x2) combination: 253.0, pow: 0.0

Prover time: 5.1s
Proof size: 67.1 KiB

########## WHIR ROUND: INITIAL ##########

========== SUMCHECK VERIFICATION (4 rounds) ==========
Initial claimed_sum: 19435565488302581635519214138538359526821937175525525703915727426381162281655

--- Sumcheck Round 0 ---
Received polynomial evaluations: h(0)=6238483719496140136488711693633916433928202544522581050377431500694720947953, h(1)=13197081768806441499030502444904443092893734631002944653538295925686441333702, h(2)=4437673282373300289018642830579810434622094671103724087548277647136653888312
Verifier computes: h(0) + h(1) = 19435565488302581635519214138538359526821937175525525703915727426381162281655
Expected claimed_sum: 19435565488302581635519214138538359526821937175525525703915727426381162281655
Check passes: true
Folding randomness Œ±: 21325179092525128821437649877089545527617446853684184582097752139729611899270
Verifier computes: h(Œ±) = 11787801275995830730911129048344504511139135410716579423138340211371464139045
Updated claimed_sum for next round: 11787801275995830730911129048344504511139135410716579423138340211371464139045

--- Sumcheck Round 1 ---
Received polynomial evaluations: h(0)=12563117052253893052446052126601009929979491746204799090788089684117828613383, h(1)=21112927095581212900711482667000769669708008064927814676048454713829444021279, h(2)=16581320874721026569943631300941942712276108142086531448456850515446295438746
Verifier computes: h(0) + h(1) = 11787801275995830730911129048344504511139135410716579423138340211371464139045
Expected claimed_sum: 11787801275995830730911129048344504511139135410716579423138340211371464139045
Check passes: true
Folding randomness Œ±: 4040516755434580495970195752753123174048279360958147596977596195721338057760
Verifier computes: h(Œ±) = 5299285588888431962949686269433714244752911366747966063461098186141167940764
Updated claimed_sum for next round: 5299285588888431962949686269433714244752911366747966063461098186141167940764

--- Sumcheck Round 2 ---
Received polynomial evaluations: h(0)=1759946660729754532000097924292008056760535986118830987537053428764977413971, h(1)=3539338928158677430949588345141706187992375380629135075924044757376190526793, h(2)=7314350606386286213354574710778719230252812302690731335429405480642488610560
Verifier computes: h(0) + h(1) = 5299285588888431962949686269433714244752911366747966063461098186141167940764
Expected claimed_sum: 5299285588888431962949686269433714244752911366747966063461098186141167940764
Check passes: true
Folding randomness Œ±: 16836960234762586358573347971116493797551593413910802846308589441107223493946
Verifier computes: h(Œ±) = 12574181092403810387708299783866597626125027931182128693917197963511469985732
Updated claimed_sum for next round: 12574181092403810387708299783866597626125027931182128693917197963511469985732

--- Sumcheck Round 3 ---
Received polynomial evaluations: h(0)=17921585557756643184291568269985655029636571853105314815198086898451208999642, h(1)=16540838406486442425663137259138217685036820478492848222417315251636069481707, h(2)=8896671886480856690925402170335771460773901771079259475902708159557075757965
Verifier computes: h(0) + h(1) = 12574181092403810387708299783866597626125027931182128693917197963511469985732
Expected claimed_sum: 12574181092403810387708299783866597626125027931182128693917197963511469985732
Check passes: true
Folding randomness Œ±: 1666955457753796258464327454756342291264429928057188037775771142562703620840
Verifier computes: h(Œ±) = 5236483382018877003193338585926733014568995870655397258787713113744139690633
Updated claimed_sum for next round: 5236483382018877003193338585926733014568995870655397258787713113744139690633

========== SUMCHECK VERIFICATION COMPLETE ==========


########## WHIR ROUND: 0 ##########

========== SUMCHECK VERIFICATION (4 rounds) ==========
Initial claimed_sum: 20078159942794221150958733277632788785028639041343321976812163818126180023717

--- Sumcheck Round 0 ---
Received polynomial evaluations: h(0)=3485822607236862421934820158073335080731134229809429560021698096559549520003, h(1)=16592337335557358729023913119559453704297504811533892416790465721566630503714, h(2)=4309245441237464358255232801084183514162092717539423239902145271764324529
Verifier computes: h(0) + h(1) = 20078159942794221150958733277632788785028639041343321976812163818126180023717
Expected claimed_sum: 20078159942794221150958733277632788785028639041343321976812163818126180023717
Check passes: true
Folding randomness Œ±: 3027794499736315715866801343354875169858719201968687781379245734300409575493
Verifier computes: h(Œ±) = 20004235600559432639378117795452487973374457844963494100399905879929033220893
Updated claimed_sum for next round: 20004235600559432639378117795452487973374457844963494100399905879929033220893

--- Sumcheck Round 1 ---
Received polynomial evaluations: h(0)=7624746517154340972217623407671304501765910180780448557789069336136180101573, h(1)=12379489083405091667160494387781183471608547664183045542610836543792853119320, h(2)=17966416977774462838959155585036614329165963478381828355512078211597896585721
Verifier computes: h(0) + h(1) = 20004235600559432639378117795452487973374457844963494100399905879929033220893
Expected claimed_sum: 20004235600559432639378117795452487973374457844963494100399905879929033220893
Check passes: true
Folding randomness Œ±: 3831297144379193973357287040043193575335692369506650216075374976849447542630
Verifier computes: h(Œ±) = 3002695097652053114005993236988315540345253526922947750336517029948638909226
Updated claimed_sum for next round: 3002695097652053114005993236988315540345253526922947750336517029948638909226

--- Sumcheck Round 2 ---
Received polynomial evaluations: h(0)=10704743907568586932774296469606167421028633712068704513900957646287735668757, h(1)=14186194061922741403478102512639423207864984215270277580133763570236711736086, h(2)=2158525557774870333341682081423205408291006136034157793955476194815038678164
Verifier computes: h(0) + h(1) = 3002695097652053114005993236988315540345253526922947750336517029948638909226
Expected claimed_sum: 3002695097652053114005993236988315540345253526922947750336517029948638909226
Check passes: true
Folding randomness Œ±: 12908406595265387685823488330458840336619003493922776542526907306925049307856
Verifier computes: h(Œ±) = 16945255257140049703463387446239809374418670068360639138146180444997885310772
Updated claimed_sum for next round: 16945255257140049703463387446239809374418670068360639138146180444997885310772

--- Sumcheck Round 3 ---
Received polynomial evaluations: h(0)=15170553296488578102592896087537694419122508019359758099451250826658135226909, h(1)=1774701960651471600870491358702114955296162049000881038694929618339750083863, h(2)=14009911376633939419085642201414001675768015145177152927484750309618363859160
Verifier computes: h(0) + h(1) = 16945255257140049703463387446239809374418670068360639138146180444997885310772
Expected claimed_sum: 16945255257140049703463387446239809374418670068360639138146180444997885310772
Check passes: true
Folding randomness Œ±: 13821311377706684399612610380275517067361999296228826786444256926665039118118
Verifier computes: h(Œ±) = 17396299256253668692034507979443065621102174918972188806429159087820633304842
Updated claimed_sum for next round: 17396299256253668692034507979443065621102174918972188806429159087820633304842

========== SUMCHECK VERIFICATION COMPLETE ==========


########## WHIR ROUND: 1 ##########

========== SUMCHECK VERIFICATION (4 rounds) ==========
Initial claimed_sum: 12772147338613181826926016409365598192117363686135948685714111768553103055093

--- Sumcheck Round 0 ---
Received polynomial evaluations: h(0)=21178046549600671414945457580778337988443885176316740080780790492373987390372, h(1)=13482343660851785634226964573844535292221842910235242948631525462754924160338, h(2)=6609236865835691190888279987125642095193764291763672576907885669948986139309
Verifier computes: h(0) + h(1) = 12772147338613181826926016409365598192117363686135948685714111768553103055093
Expected claimed_sum: 12772147338613181826926016409365598192117363686135948685714111768553103055093
Check passes: true
Folding randomness Œ±: 14363167338436059047196593787711873202749947966910807509864427245810889073889
Verifier computes: h(Œ±) = 7142900152696721625597091665778931064769322808260407613234260676706029760760
Updated claimed_sum for next round: 7142900152696721625597091665778931064769322808260407613234260676706029760760

--- Sumcheck Round 1 ---
Received polynomial evaluations: h(0)=4353486475470999779507767990075538395831663339478320201132077526342405159669, h(1)=2789413677225721846089323675703392668937659468782087412102183150363624601091, h(2)=15671354126977739928397799130196378373882051800488753437068657139284571006988
Verifier computes: h(0) + h(1) = 7142900152696721625597091665778931064769322808260407613234260676706029760760
Expected claimed_sum: 7142900152696721625597091665778931064769322808260407613234260676706029760760
Check passes: true
Folding randomness Œ±: 5534912890428311171729348422082730154041519186743525293608331849497342955454
Verifier computes: h(Œ±) = 7284608445042927134089300654249493900024593116694453741230233945853613167957
Updated claimed_sum for next round: 7284608445042927134089300654249493900024593116694453741230233945853613167957

--- Sumcheck Round 2 ---
Received polynomial evaluations: h(0)=3792991936053372145019374543759118537932182360579328270229893110450444690860, h(1)=3491616508989554989069926110490375362092410756115125471000340835403168477097, h(2)=7818109145176973162796975090485994902581130252864862691649241183220391890357
Verifier computes: h(0) + h(1) = 7284608445042927134089300654249493900024593116694453741230233945853613167957
Expected claimed_sum: 7284608445042927134089300654249493900024593116694453741230233945853613167957
Check passes: true
Folding randomness Œ±: 17937036877834355141691050791509404719526335941318121011460751582791143489190
Verifier computes: h(Œ±) = 1945383718717131578797266265715576027221357237140522618875142423178194544812
Updated claimed_sum for next round: 1945383718717131578797266265715576027221357237140522618875142423178194544812

--- Sumcheck Round 3 ---
Received polynomial evaluations: h(0)=1468953066734082704813483179354609894921664260836494466859935960369251119678, h(1)=476430651983048873983783086360966132299692976304028152015206462808943425134, h(2)=731860792525497236596289982744454858718427842091738530164110187332758347025
Verifier computes: h(0) + h(1) = 1945383718717131578797266265715576027221357237140522618875142423178194544812
Expected claimed_sum: 1945383718717131578797266265715576027221357237140522618875142423178194544812
Check passes: true
Folding randomness Œ±: 6030951617903577287063167009255178311900929651041086958752590682175716414665
Verifier computes: h(Œ±) = 18137024644393845152939299757767579790262716417583276433780390910885979559862
Updated claimed_sum for next round: 18137024644393845152939299757767579790262716417583276433780390910885979559862

========== SUMCHECK VERIFICATION COMPLETE ==========


########## WHIR ROUND: 2 ##########

========== SUMCHECK VERIFICATION (4 rounds) ==========
Initial claimed_sum: 14920357060284201999854996610849194570329849533563965956184932258646262776500

--- Sumcheck Round 0 ---
Received polynomial evaluations: h(0)=1438745321905518632645793219664756075960292686851045119553537164438633948719, h(1)=13481611738378683367209203391184438494369556846712920836631395094207628827781, h(2)=15037661066784842685854965916456810931637869378651081766439420325334596677764
Verifier computes: h(0) + h(1) = 14920357060284201999854996610849194570329849533563965956184932258646262776500
Expected claimed_sum: 14920357060284201999854996610849194570329849533563965956184932258646262776500
Check passes: true
Folding randomness Œ±: 7894662973773695792074473338141555766545755088331036520214118528035645307241
Verifier computes: h(Œ±) = 15870401332932662831608806177892645478782248492263439833709271556498727688528
Updated claimed_sum for next round: 15870401332932662831608806177892645478782248492263439833709271556498727688528

--- Sumcheck Round 1 ---
Received polynomial evaluations: h(0)=6987734012962393990642452924631455711307026222313547932305294758220376238807, h(1)=8882667319970268840966353253261189767475222269949891901403976798278351449721, h(2)=5855189668609177233890367754780371245526001483094427889538870554829802626584
Verifier computes: h(0) + h(1) = 15870401332932662831608806177892645478782248492263439833709271556498727688528
Expected claimed_sum: 15870401332932662831608806177892645478782248492263439833709271556498727688528
Check passes: true
Folding randomness Œ±: 1300106321333781118529383835313262437590951909527083722137353654226418942138
Verifier computes: h(Œ±) = 16960358894120635518682483757620881506378546047187866805783357805037208372317
Updated claimed_sum for next round: 16960358894120635518682483757620881506378546047187866805783357805037208372317

--- Sumcheck Round 2 ---
Received polynomial evaluations: h(0)=8681573139479450052288113368858276818406987505917863561801361912855063658202, h(1)=8278785754641185466394370388762604687971558541270003243981995892182144714115, h(2)=2574109570940364258057675040783584436466744822563882265817161828607617116541
Verifier computes: h(0) + h(1) = 16960358894120635518682483757620881506378546047187866805783357805037208372317
Expected claimed_sum: 16960358894120635518682483757620881506378546047187866805783357805037208372317
Check passes: true
Folding randomness Œ±: 18102749612288816662230955472474691109315222433007450763259481884464229610769
Verifier computes: h(Œ±) = 18149984515983792603859003128609565211188037562167015921908594048838244187027
Updated claimed_sum for next round: 18149984515983792603859003128609565211188037562167015921908594048838244187027

--- Sumcheck Round 3 ---
Received polynomial evaluations: h(0)=9577463556191213120253993006215323930292365973713963957143842070754155023327, h(1)=8572520959792579483605010122394241280895671588453051964764751978084089163700, h(2)=1536035473389906696427762264016763614796910024015785490480054504069932088436
Verifier computes: h(0) + h(1) = 18149984515983792603859003128609565211188037562167015921908594048838244187027
Expected claimed_sum: 18149984515983792603859003128609565211188037562167015921908594048838244187027
Check passes: true
Folding randomness Œ±: 10476513681513445086522564433881353043717954340984929594244590978104436791573
Verifier computes: h(Œ±) = 4878849100193312404363010480419888323438382297899792223489543799835774870098
Updated claimed_sum for next round: 4878849100193312404363010480419888323438382297899792223489543799835774870098

========== SUMCHECK VERIFICATION COMPLETE ==========


########## WHIR ROUND: 3 ##########

========== SUMCHECK VERIFICATION (4 rounds) ==========
Initial claimed_sum: 9615125239570695194995612820499298429529571671406293456224059557219207952333

--- Sumcheck Round 0 ---
Received polynomial evaluations: h(0)=13963203378527356532439032122005291443825618518569942168021272482394500579539, h(1)=17540164732882613884802986443751282074252317553252385631900991261400515868411, h(2)=6791360708458858888663292978807763935913054106167431021776856155222829305992
Verifier computes: h(0) + h(1) = 9615125239570695194995612820499298429529571671406293456224059557219207952333
Expected claimed_sum: 9615125239570695194995612820499298429529571671406293456224059557219207952333
Check passes: true
Folding randomness Œ±: 14610772298176051512119498964123122832552330657094906241526616087072479680739
Verifier computes: h(Œ±) = 11117259156734934182976653898665012415586713751308520839685001946548377748134
Updated claimed_sum for next round: 11117259156734934182976653898665012415586713751308520839685001946548377748134

--- Sumcheck Round 1 ---
Received polynomial evaluations: h(0)=8555101000184286523392532834709739852411068177744663851702905575078718138767, h(1)=2562158156550647659584121063955272563175645573563856987982096371469659609367, h(2)=11284628406382508769193108385417109539244999110060478599757773369446853998246
Verifier computes: h(0) + h(1) = 11117259156734934182976653898665012415586713751308520839685001946548377748134
Expected claimed_sum: 11117259156734934182976653898665012415586713751308520839685001946548377748134
Check passes: true
Folding randomness Œ±: 13917277259050864409858786933611994409195220593007860979649431497356335653417
Verifier computes: h(Œ±) = 19853979388383516804311034770315188259286392256594466593229182011951545431072
Updated claimed_sum for next round: 19853979388383516804311034770315188259286392256594466593229182011951545431072

--- Sumcheck Round 2 ---
Received polynomial evaluations: h(0)=3440927895952618867693639633239579467826591458758956827795052688161128457943, h(1)=16413051492430897936617395137075608791459800797835509765434129323790416973129, h(2)=6989977179368956542339616816797864771898976391404498283027777368937278873367
Verifier computes: h(0) + h(1) = 19853979388383516804311034770315188259286392256594466593229182011951545431072
Expected claimed_sum: 19853979388383516804311034770315188259286392256594466593229182011951545431072
Check passes: true
Folding randomness Œ±: 10577593936996454569749433785684013958352615297295340600357270686045412473887
Verifier computes: h(Œ±) = 14922743329227827950618537885586915557216452223120529157313760001667670506103
Updated claimed_sum for next round: 14922743329227827950618537885586915557216452223120529157313760001667670506103

--- Sumcheck Round 3 ---
Received polynomial evaluations: h(0)=7474238306943189074354415787679129202774923860110223852186625535630032121119, h(1)=7448505022284638876264122097907786354441528363010305305127134466037638384984, h(2)=5221458845751873411120677954906314285951355426480010762415038394899003017472
Verifier computes: h(0) + h(1) = 14922743329227827950618537885586915557216452223120529157313760001667670506103
Expected claimed_sum: 14922743329227827950618537885586915557216452223120529157313760001667670506103
Check passes: true
Folding randomness Œ±: 19748497527245402973250706798234160112016619526094128658882657867087107952712
Verifier computes: h(Œ±) = 15456287329704624614588624554299177244623553342982451362362275178700895487912
Updated claimed_sum for next round: 15456287329704624614588624554299177244623553342982451362362275178700895487912

========== SUMCHECK VERIFICATION COMPLETE ==========


########## WHIR ROUND: FINAL ##########

========== SUMCHECK VERIFICATION (2 rounds) ==========
Initial claimed_sum: 15456287329704624614588624554299177244623553342982451362362275178700895487912

--- Sumcheck Round 0 ---
Received polynomial evaluations: h(0)=1295314281114514722150666634679878387269247729336214022168813296862774858029, h(1)=14160973048590109892437957919619298857354305613646237340193461881838120629883, h(2)=5170903395091461570312097730605046598849278078520370454904573189696696519946
Verifier computes: h(0) + h(1) = 15456287329704624614588624554299177244623553342982451362362275178700895487912
Expected claimed_sum: 15456287329704624614588624554299177244623553342982451362362275178700895487912
Check passes: true
Folding randomness Œ±: 13694108645668262140264223523925886990905427819628646520039775867199232835211
Verifier computes: h(Œ±) = 8447363906723401726577850441197169619847730488296807854892473907297921619956
Updated claimed_sum for next round: 8447363906723401726577850441197169619847730488296807854892473907297921619956

--- Sumcheck Round 1 ---
Received polynomial evaluations: h(0)=7897035736821128577921036069116054716944915659817238352687850237284025415491, h(1)=550328169902273148656814372081114902902814828479569502204623670013896204465, h(2)=14214947699198769251072965080087674703686925774976274421994514481851564600255
Verifier computes: h(0) + h(1) = 8447363906723401726577850441197169619847730488296807854892473907297921619956
Expected claimed_sum: 8447363906723401726577850441197169619847730488296807854892473907297921619956
Check passes: true
Folding randomness Œ±: 2161454102420604340930126545507891912297194279773318285305271323122916294510
Verifier computes: h(Œ±) = 10683234831638591474753268437951180472319356526646945541568034962982889122072
Updated claimed_sum for next round: 10683234831638591474753268437951180472319356526646945541568034962982889122072

========== SUMCHECK VERIFICATION COMPLETE ==========

Verifier time: 2.2ms
Average hashes: 1.0k
Average queries: 61.0
===========================================
LAGRANGE INTERPOLATION FORMULA FOR SUMCHECK
===========================================

This document explains how the WHIR verifier computes h(Œ±) from the three evaluations h(0), h(1), h(2).

## High-Level Overview

The sumcheck polynomial is represented in **evaluation form** over the ternary domain {0, 1, 2}.
For a single-variable sumcheck round, the prover sends 3 evaluations:
  - h(0), h(1), h(2)

The verifier then:
  1. Checks: h(0) + h(1) == claimed_sum
  2. Computes: h(Œ±) for random challenge Œ±
  3. Updates: claimed_sum ‚Üê h(Œ±) for the next round

## The Formula

### Method: Lagrange Interpolation over {0, 1, 2}

Given:
  - Evaluations: h(0), h(1), h(2)
  - Challenge point: Œ± ‚àà F

Compute:
  h(Œ±) = Œ£_{i‚àà{0,1,2}} h(i) ¬∑ L_i(Œ±)

Where L_i(Œ±) are the Lagrange basis polynomials:

  L_0(Œ±) = (Œ± - 1)(Œ± - 2) / 2
  L_1(Œ±) = Œ±(Œ± - 2)(-1)       = -Œ±(Œ± - 2)
  L_2(Œ±) = Œ±(Œ± - 1) / 2

Therefore:
  h(Œ±) = h(0)¬∑(Œ± - 1)(Œ± - 2)/2 - h(1)¬∑Œ±(Œ± - 2) + h(2)¬∑Œ±(Œ± - 1)/2

### Verification Formula

Expanding:
  h(Œ±) = h(0) ¬∑ [(Œ±¬≤ - 3Œ± + 2) / 2]
       + h(1) ¬∑ [-Œ±¬≤ + 2Œ±]
       + h(2) ¬∑ [(Œ±¬≤ - Œ±) / 2]

Combining terms:
  h(Œ±) = [h(0)/2 - h(1) + h(2)/2] ¬∑ Œ±¬≤
       + [-3h(0)/2 + 2h(1) - h(2)/2] ¬∑ Œ±
       + h(0)

## Code Implementation (Rust)

From `whir/src/sumcheck/sumcheck_polynomial.rs`:

```rust
pub fn evaluate_at_point(&self, point: &MultilinearPoint<F>) -> F {
    assert_eq!(point.num_variables(), self.num_variables);
    self.evaluations
        .iter()
        .enumerate()
        .map(|(i, &eval)| eval * point.eq_poly3(i))
        .sum()
}
```

For 1 variable (single sumcheck round):
  - evaluations = [h(0), h(1), h(2)]
  - point.eq_poly3(i) computes L_i(Œ±)

From `whir/src/poly_utils/multilinear.rs`:

```rust
pub fn eq_poly3(&self, mut point: usize) -> F {
    let two = F::ONE + F::ONE;
    let two_inv = two.inverse().unwrap();  // 1/2
    
    let mut acc = F::ONE;
    
    // For single variable, this iterates once
    for &val in self.0.iter().rev() {
        acc *= match point % 3 {
            0 => val_minus_one * val_minus_two * two_inv,  // (Œ±-1)(Œ±-2)/2
            1 => val * val_minus_two * (-F::ONE),          // -Œ±(Œ±-2)
            2 => val * val_minus_one * two_inv,            // Œ±(Œ±-1)/2
            _ => unreachable!(),
        };
        point /= 3;
    }
    
    acc
}
```

Where:
  - val = Œ±
  - val_minus_one = Œ± - 1
  - val_minus_two = Œ± - 2

## Circom Implementation Notes

To implement this in Circom:

```circom
// Inputs: h0, h1, h2 (each has c0, c1 for Goldilocks2)
//         alpha (also c0, c1)
// Output: h_alpha (c0, c1)

// Compute Œ± - 1
signal alpha_minus_1_c0 <== alpha_c0 - 1;
signal alpha_minus_1_c1 <== alpha_c1;

// Compute Œ± - 2
signal alpha_minus_2_c0 <== alpha_c0 - 2;
signal alpha_minus_2_c1 <== alpha_c1;

// Compute Lagrange basis L_0(Œ±) = (Œ±-1)(Œ±-2)/2
signal L0_temp <== (alpha_minus_1) * (alpha_minus_2);  // Product in extension field
signal L0 <== L0_temp / 2;

// Compute Lagrange basis L_1(Œ±) = -Œ±(Œ±-2)
signal L1_temp <== alpha * alpha_minus_2;              // Product in extension field
signal L1 <== -L1_temp;

// Compute Lagrange basis L_2(Œ±) = Œ±(Œ±-1)/2
signal L2_temp <== alpha * alpha_minus_1;              // Product in extension field
signal L2 <== L2_temp / 2;

// Final evaluation: h(Œ±) = h(0)¬∑L_0(Œ±) + h(1)¬∑L_1(Œ±) + h(2)¬∑L_2(Œ±)
signal h_alpha <== h0 * L0 + h1 * L1 + h2 * L2;       // All in extension field
```

**Important**: All operations must be performed in the Goldilocks quadratic extension field!

## Extension Field Arithmetic

For Goldilocks2, elements are represented as:
  x = c0 + c1 ¬∑ œâ

Where œâ¬≤ = 7 (the extension field generator).

Addition:
  (a0 + a1¬∑œâ) + (b0 + b1¬∑œâ) = (a0 + b0) + (a1 + b1)¬∑œâ

Multiplication:
  (a0 + a1¬∑œâ) ¬∑ (b0 + b1¬∑œâ) = (a0¬∑b0 + 7¬∑a1¬∑b1) + (a0¬∑b1 + a1¬∑b0)¬∑œâ

Where all operations are mod p (p = 2^64 - 2^32 + 1).

## Example from Log (2^18 instance, Initial Round, Sumcheck Round 0)

Input:
  h(0) = QuadExtField { c0: 12215205352063168883, c1: 15999710841798399566 }
  h(1) = QuadExtField { c0: 16944529998913458487, c1: 10458873399224807532 }
  h(2) = QuadExtField { c0: 16616127435142680230, c1: 10233929630653772961 }
  Œ±    = QuadExtField { c0: 4447428230166501187, c1: 8540227344758325703 }

Output:
  h(Œ±) = QuadExtField { c0: 8990233997910171714, c1: 7407899681650761744 }

This can be used as a test vector for Circom implementation!

===========================================

