    Finished `release` profile [optimized + debuginfo] target(s) in 0.06s
     Running `target/release/main --type PCS --security-level 100 --num-variables 18 --evaluations 1 --rate 3 --fold 4 --sec ConjectureList --field Field256 --hash Blake3 --reps 1`
=========================================
Whir (PCS) üå™Ô∏è
Field: Field256 and MT: Blake3
Number of variables: 18, folding factor: ConstantFromSecondRound(4, 4)
Security level: 100 bits using ConjectureList security and 18 bits of PoW
initial_folding_pow_bits: 0
Num_queries: 28, rate: 2^-3, pow_bits: 16, ood_samples: 1, folding_pow: 0
Num_queries: 14, rate: 2^-6, pow_bits: 16, ood_samples: 1, folding_pow: 0
Num_queries: 10, rate: 2^-9, pow_bits: 10, ood_samples: 1, folding_pow: 0
final_queries: 7, final_rate: 2^-12, final_pow_bits: 16, final_folding_pow_bits: 0
------------------------------------
Round by round soundness analysis:
------------------------------------
187.0 bits -- OOD commitment
228.0 bits -- (x4) prox gaps: 229.0, sumcheck: 228.0, pow: 0.0
187.0 bits -- OOD sample
100.0 bits -- query error: 84.0, combination: 221.1, pow: 16.0
226.0 bits -- (x4) prox gaps: 227.0, sumcheck: 226.0, pow: 0.0
187.0 bits -- OOD sample
100.0 bits -- query error: 84.0, combination: 220.1, pow: 16.0
224.0 bits -- (x4) prox gaps: 225.0, sumcheck: 224.0, pow: 0.0
187.0 bits -- OOD sample
100.0 bits -- query error: 90.0, combination: 218.5, pow: 10.0
222.0 bits -- (x4) prox gaps: 223.0, sumcheck: 222.0, pow: 0.0
100.0 bits -- query error: 84.0, pow: 16.0
269.0 bits -- (x2) combination: 253.0, pow: 0.0

Prover time: 258.2ms
Proof size: 57.7 KiB

########## WHIR ROUND: INITIAL ##########

========== SUMCHECK VERIFICATION (4 rounds) ==========
Initial claimed_sum: 8286670912990360375013931727126905085286954115192151408134126021375563162099

--- Sumcheck Round 0 ---
Received polynomial evaluations: h(0)=19809855931473404202000080054325232455939607729088347332105369630324072431351, h(1)=10365057853356231395260257418058947717895710786519838419726960577627299226365, h(2)=9596347663824745933832510256498407662297170429790639100716056646219870818665
Verifier computes: h(0) + h(1) = 8286670912990360375013931727126905085286954115192151408134126021375563162099
Expected claimed_sum: 8286670912990360375013931727126905085286954115192151408134126021375563162099
Check passes: true
Folding randomness Œ±: 16918127702665615918595494799233907425920426787240611597874683018407325834769
Verifier computes: h(Œ±) = 1131036274758311297278290613615840283289669958152180152980188222369419315028
Updated claimed_sum for next round: 1131036274758311297278290613615840283289669958152180152980188222369419315028

--- Sumcheck Round 1 ---
Received polynomial evaluations: h(0)=551544290217022707150406855579874219138285198784455690310914926222966924646, h(1)=579491984541288590127883758035966064151384759367724462669273296146452390382, h(2)=19480448936919367388226666091574115900363326154745106577270778090423498379339
Verifier computes: h(0) + h(1) = 1131036274758311297278290613615840283289669958152180152980188222369419315028
Expected claimed_sum: 1131036274758311297278290613615840283289669958152180152980188222369419315028
Check passes: true
Folding randomness Œ±: 13839774415393517424202249208447004887105147871488570318434948388978250679890
Verifier computes: h(Œ±) = 400647026438457908188385670552378510528667503422385692583302227926935134897
Updated claimed_sum for next round: 400647026438457908188385670552378510528667503422385692583302227926935134897

--- Sumcheck Round 2 ---
Received polynomial evaluations: h(0)=6189608901506128875774773113231003859703640054206358266032298311818336326332, h(1)=16099280996771604254660018302578649739373391849632061770249208102684407304182, h(2)=16610098449664004301622822992546539711653310219859957308658256406288013198338
Verifier computes: h(0) + h(1) = 400647026438457908188385670552378510528667503422385692583302227926935134897
Expected claimed_sum: 400647026438457908188385670552378510528667503422385692583302227926935134897
Check passes: true
Folding randomness Œ±: 10410409654336420706230383679904984170124254812508115175005838579436429196425
Verifier computes: h(Œ±) = 10633327221480320190780323019374913198502103306890025266663601062113149712997
Updated claimed_sum for next round: 10633327221480320190780323019374913198502103306890025266663601062113149712997

--- Sumcheck Round 3 ---
Received polynomial evaluations: h(0)=15148640384934854782672442349061629172715854419955900420461784555588640312280, h(1)=17372929708384740630354286415570559114334613287350159189900020693100317896334, h(2)=21669930200115851781961194783507714097697269236456323236626855124975395028474
Verifier computes: h(0) + h(1) = 10633327221480320190780323019374913198502103306890025266663601062113149712997
Expected claimed_sum: 10633327221480320190780323019374913198502103306890025266663601062113149712997
Check passes: true
Folding randomness Œ±: 18879410687327065560637595992708116691294259879173707122282301154716098213673
Verifier computes: h(Œ±) = 15317850602192411432528696881132955039495530842958911099616868846413523066553
Updated claimed_sum for next round: 15317850602192411432528696881132955039495530842958911099616868846413523066553

========== SUMCHECK VERIFICATION COMPLETE ==========


########## WHIR ROUND: 0 ##########

========== SUMCHECK VERIFICATION (4 rounds) ==========
Initial claimed_sum: 19971484979480169118046690293904296993375732087604116825209338870995227035301

--- Sumcheck Round 0 ---
Received polynomial evaluations: h(0)=19852799875118159516969713415448435941396353047470286390035057380937552932466, h(1)=118685104362009601076976878455861051979379040133830435174281490057674102835, h(2)=10487301038787235546596682583398451188519624168381923143487270920387174620717
Verifier computes: h(0) + h(1) = 19971484979480169118046690293904296993375732087604116825209338870995227035301
Expected claimed_sum: 19971484979480169118046690293904296993375732087604116825209338870995227035301
Check passes: true
Folding randomness Œ±: 6116381502793632643762443722022391767443170072973704359771004468424255703603
Verifier computes: h(Œ±) = 5200672360723599197442982095722407244269237609744846355318351015686661977826
Updated claimed_sum for next round: 5200672360723599197442982095722407244269237609744846355318351015686661977826

--- Sumcheck Round 1 ---
Received polynomial evaluations: h(0)=9423318004420297351453348823715284620561088135578351046228924699659116393430, h(1)=17665597228142577068236039017264397712256513874582529652787630502603354080013, h(2)=13692300220126131706814783812519657650652160133685875115827054776789366070132
Verifier computes: h(0) + h(1) = 5200672360723599197442982095722407244269237609744846355318351015686661977826
Expected claimed_sum: 5200672360723599197442982095722407244269237609744846355318351015686661977826
Check passes: true
Folding randomness Œ±: 18486174840800701200133820388698217380948161974685917815103611829122737924805
Verifier computes: h(Œ±) = 19652473849145608922615072103359489911442885186615177563040809479176334708053
Updated claimed_sum for next round: 19652473849145608922615072103359489911442885186615177563040809479176334708053

--- Sumcheck Round 2 ---
Received polynomial evaluations: h(0)=14528349381433276683067814612663833175053487179857805655106907898896775362696, h(1)=5124124467712332239547257490695656736389398006757371907933901580279559345357, h(2)=7889066432485694879727881533045952685039763793348192500468256184327035240060
Verifier computes: h(0) + h(1) = 19652473849145608922615072103359489911442885186615177563040809479176334708053
Expected claimed_sum: 19652473849145608922615072103359489911442885186615177563040809479176334708053
Check passes: true
Folding randomness Œ±: 10728212673878043087917639479619006015977218807195582584618957896500396712455
Verifier computes: h(Œ±) = 18836770840334378522719972584352026318537990865577196699905139925434166981628
Updated claimed_sum for next round: 18836770840334378522719972584352026318537990865577196699905139925434166981628

--- Sumcheck Round 3 ---
Received polynomial evaluations: h(0)=523607879718397779648639186550823277956379859667314482694385371199837469268, h(1)=18313162960615980743071333397801203040581611005909882217210754554234329512360, h(2)=14785055716313739552865844684883508002866127701781072910463476156291698400219
Verifier computes: h(0) + h(1) = 18836770840334378522719972584352026318537990865577196699905139925434166981628
Expected claimed_sum: 18836770840334378522719972584352026318537990865577196699905139925434166981628
Check passes: true
Folding randomness Œ±: 9865353589394709130676439574584160814082997642399695498802109393724390597199
Verifier computes: h(Œ±) = 4167850726882870330725287918362847658377027084654542173965155392856015673239
Updated claimed_sum for next round: 4167850726882870330725287918362847658377027084654542173965155392856015673239

========== SUMCHECK VERIFICATION COMPLETE ==========


########## WHIR ROUND: 1 ##########

========== SUMCHECK VERIFICATION (4 rounds) ==========
Initial claimed_sum: 6842694199358195766108194267331954310746627105050813771846551624728045625714

--- Sumcheck Round 0 ---
Received polynomial evaluations: h(0)=3252356916069801551907469357123272734790512624067521104203830694156811440807, h(1)=3590337283288394214200724910208681575956114480983292667642720930571234184907, h(2)=14904796359570696069670228967116304867344647954318829261230565290767777414412
Verifier computes: h(0) + h(1) = 6842694199358195766108194267331954310746627105050813771846551624728045625714
Expected claimed_sum: 6842694199358195766108194267331954310746627105050813771846551624728045625714
Check passes: true
Folding randomness Œ±: 16895066929002705123610661802731657125741500634039435714218891140910953444940
Verifier computes: h(Œ±) = 21585855025405397912020417987739516476898944136673283744621778803214792892909
Updated claimed_sum for next round: 21585855025405397912020417987739516476898944136673283744621778803214792892909

--- Sumcheck Round 1 ---
Received polynomial evaluations: h(0)=13441053995696298483270794005460153409689035989112280270411692794695208991161, h(1)=8144801029709099428749623982279363067209908147561003474210086008519583901748, h(2)=876595114908668931289764875469025770929123532560506198717238855459374862138
Verifier computes: h(0) + h(1) = 21585855025405397912020417987739516476898944136673283744621778803214792892909
Expected claimed_sum: 21585855025405397912020417987739516476898944136673283744621778803214792892909
Check passes: true
Folding randomness Œ±: 8068992407599038992288244256469411461957977290693877842834011826883702505754
Verifier computes: h(Œ±) = 4526815594085184196325922071487119400182463886945936788401447133455859097160
Updated claimed_sum for next round: 4526815594085184196325922071487119400182463886945936788401447133455859097160

--- Sumcheck Round 2 ---
Received polynomial evaluations: h(0)=6532425489283872850016458192685459647381258752501316830603233474301450313186, h(1)=19882632976640586568555869624058934841349569534860654301496417845730217279591, h(2)=1298224633334020962368978634034714879621176622509904805320688888685591339896
Verifier computes: h(0) + h(1) = 4526815594085184196325922071487119400182463886945936788401447133455859097160
Expected claimed_sum: 4526815594085184196325922071487119400182463886945936788401447133455859097160
Check passes: true
Folding randomness Œ±: 11805593138552486791790763619765081317763831793335456806038123442669254966591
Verifier computes: h(Œ±) = 1520551158657471325968195177926102972578663999519554935688360296967635523066
Updated claimed_sum for next round: 1520551158657471325968195177926102972578663999519554935688360296967635523066

--- Sumcheck Round 3 ---
Received polynomial evaluations: h(0)=5302943489490429369371914997322942380685707535516571700500855586070302807214, h(1)=18105850541006317178842685925860435680441320864419017578885708897473141211469, h(2)=20435599701311156052524207270016938816923158461125511657916026503550389489311
Verifier computes: h(0) + h(1) = 1520551158657471325968195177926102972578663999519554935688360296967635523066
Expected claimed_sum: 1520551158657471325968195177926102972578663999519554935688360296967635523066
Check passes: true
Folding randomness Œ±: 9236359925149688900323557996273408476146650320793213054351885491225281957758
Verifier computes: h(Œ±) = 15513874616788633599784233790905762635214741614947901143818518722268497655376
Updated claimed_sum for next round: 15513874616788633599784233790905762635214741614947901143818518722268497655376

========== SUMCHECK VERIFICATION COMPLETE ==========


########## WHIR ROUND: 2 ##########

========== SUMCHECK VERIFICATION (4 rounds) ==========
Initial claimed_sum: 9292884760139687379427324697234356848343913879587151781212214039773301257926

--- Sumcheck Round 0 ---
Received polynomial evaluations: h(0)=4416314080137198137599910633145319417021506316113056391791796561770717888338, h(1)=4876570680002489241827414064089037431322407563474095389420417478002583369588, h(2)=13410599262938927101425009392325426361086197144922670350702972768951209907111
Verifier computes: h(0) + h(1) = 9292884760139687379427324697234356848343913879587151781212214039773301257926
Expected claimed_sum: 9292884760139687379427324697234356848343913879587151781212214039773301257926
Check passes: true
Folding randomness Œ±: 12127239797733207183764313203575094082520968432387879451607537973085207074226
Verifier computes: h(Œ±) = 19626634222172665499709091364185741224099598741539897016678514134017787888874
Updated claimed_sum for next round: 19626634222172665499709091364185741224099598741539897016678514134017787888874

--- Sumcheck Round 1 ---
Received polynomial evaluations: h(0)=16634163394065906962734317562541654477858166339634040308401273257693698935815, h(1)=2992470828106758536974773801644086746241432401905856708277240876324088953059, h(2)=12121959649053798125068172517143117186925240719714759478054077041341274195869
Verifier computes: h(0) + h(1) = 19626634222172665499709091364185741224099598741539897016678514134017787888874
Expected claimed_sum: 19626634222172665499709091364185741224099598741539897016678514134017787888874
Check passes: true
Folding randomness Œ±: 2107411886710790401754080859202294568329455265664530705922177967141321913842
Verifier computes: h(Œ±) = 8755288641863663956341590796229498082864678278314703883531213298221076304252
Updated claimed_sum for next round: 8755288641863663956341590796229498082864678278314703883531213298221076304252

--- Sumcheck Round 2 ---
Received polynomial evaluations: h(0)=19823100094989476397723361553482768698558478016402383645730982180615902738247, h(1)=10820431418713462780864634988004004472854564662328354581498435304180982061622, h(2)=371267506281142112220806272832680096097957953973414866993217949430124521011
Verifier computes: h(0) + h(1) = 8755288641863663956341590796229498082864678278314703883531213298221076304252
Expected claimed_sum: 8755288641863663956341590796229498082864678278314703883531213298221076304252
Check passes: true
Folding randomness Œ±: 17659279311949318547909800701319494000019720088539058499089531461218139026510
Verifier computes: h(Œ±) = 21705111307998109636337025975549793119638259372583169220333528693474662540722
Updated claimed_sum for next round: 21705111307998109636337025975549793119638259372583169220333528693474662540722

--- Sumcheck Round 3 ---
Received polynomial evaluations: h(0)=1554753366954145152600108442168105448607856499910538933957924307134167387701, h(1)=20150357941043964483736917533381687671030402872672630286375604386340495153021, h(2)=8639063970799936374102070617473903150675166908189747573989408672701646661142
Verifier computes: h(0) + h(1) = 21705111307998109636337025975549793119638259372583169220333528693474662540722
Expected claimed_sum: 21705111307998109636337025975549793119638259372583169220333528693474662540722
Check passes: true
Folding randomness Œ±: 19941913444047128613768827898840435889066078456736865452337153888659858221050
Verifier computes: h(Œ±) = 16862134846408399347966853983388331426647443725917240908210987303297490859032
Updated claimed_sum for next round: 16862134846408399347966853983388331426647443725917240908210987303297490859032

========== SUMCHECK VERIFICATION COMPLETE ==========


########## WHIR ROUND: FINAL ##########

========== SUMCHECK VERIFICATION (2 rounds) ==========
Initial claimed_sum: 16862134846408399347966853983388331426647443725917240908210987303297490859032

--- Sumcheck Round 0 ---
Received polynomial evaluations: h(0)=4286714179799046184155694304672070646231789425956214581136664818185516828950, h(1)=12575420666609353163811159678716260780415654299961026327074322485111974030082, h(2)=8440050756705328116172447216821167197525347979244822824264581831602389761178
Verifier computes: h(0) + h(1) = 16862134846408399347966853983388331426647443725917240908210987303297490859032
Expected claimed_sum: 16862134846408399347966853983388331426647443725917240908210987303297490859032
Check passes: true
Folding randomness Œ±: 5545077651789581236450097866536126332604015456271791403925171079454640250298
Verifier computes: h(Œ±) = 10989371238276505302740360397639889917700976282293923147908098758339619282050
Updated claimed_sum for next round: 10989371238276505302740360397639889917700976282293923147908098758339619282050

--- Sumcheck Round 1 ---
Received polynomial evaluations: h(0)=6840489640181840118520939152182918154563835397470853528760665369143273571145, h(1)=4148881598094665184219421245456971763137140884823069619147433389196345710905, h(2)=4875733726075822358994882048644006172025331559960140426798741584789332108384
Verifier computes: h(0) + h(1) = 10989371238276505302740360397639889917700976282293923147908098758339619282050
Expected claimed_sum: 10989371238276505302740360397639889917700976282293923147908098758339619282050
Check passes: true
Folding randomness Œ±: 11142380799274158430645040010765371088030759425375902051365384465681701126891
Verifier computes: h(Œ±) = 6496476847092635671767366988926695413350328333764931690992232163095926688049
Updated claimed_sum for next round: 6496476847092635671767366988926695413350328333764931690992232163095926688049

========== SUMCHECK VERIFICATION COMPLETE ==========

Verifier time: 1.8ms
Average hashes: 0.8k
Average queries: 59.0
===========================================
LAGRANGE INTERPOLATION FORMULA FOR SUMCHECK
===========================================

This document explains how the WHIR verifier computes h(Œ±) from the three evaluations h(0), h(1), h(2).

## High-Level Overview

The sumcheck polynomial is represented in **evaluation form** over the ternary domain {0, 1, 2}.
For a single-variable sumcheck round, the prover sends 3 evaluations:
  - h(0), h(1), h(2)

The verifier then:
  1. Checks: h(0) + h(1) == claimed_sum
  2. Computes: h(Œ±) for random challenge Œ±
  3. Updates: claimed_sum ‚Üê h(Œ±) for the next round

## The Formula

### Method: Lagrange Interpolation over {0, 1, 2}

Given:
  - Evaluations: h(0), h(1), h(2)
  - Challenge point: Œ± ‚àà F

Compute:
  h(Œ±) = Œ£_{i‚àà{0,1,2}} h(i) ¬∑ L_i(Œ±)

Where L_i(Œ±) are the Lagrange basis polynomials:

  L_0(Œ±) = (Œ± - 1)(Œ± - 2) / 2
  L_1(Œ±) = Œ±(Œ± - 2)(-1)       = -Œ±(Œ± - 2)
  L_2(Œ±) = Œ±(Œ± - 1) / 2

Therefore:
  h(Œ±) = h(0)¬∑(Œ± - 1)(Œ± - 2)/2 - h(1)¬∑Œ±(Œ± - 2) + h(2)¬∑Œ±(Œ± - 1)/2

### Verification Formula

Expanding:
  h(Œ±) = h(0) ¬∑ [(Œ±¬≤ - 3Œ± + 2) / 2]
       + h(1) ¬∑ [-Œ±¬≤ + 2Œ±]
       + h(2) ¬∑ [(Œ±¬≤ - Œ±) / 2]

Combining terms:
  h(Œ±) = [h(0)/2 - h(1) + h(2)/2] ¬∑ Œ±¬≤
       + [-3h(0)/2 + 2h(1) - h(2)/2] ¬∑ Œ±
       + h(0)

## Code Implementation (Rust)

From `whir/src/sumcheck/sumcheck_polynomial.rs`:

```rust
pub fn evaluate_at_point(&self, point: &MultilinearPoint<F>) -> F {
    assert_eq!(point.num_variables(), self.num_variables);
    self.evaluations
        .iter()
        .enumerate()
        .map(|(i, &eval)| eval * point.eq_poly3(i))
        .sum()
}
```

For 1 variable (single sumcheck round):
  - evaluations = [h(0), h(1), h(2)]
  - point.eq_poly3(i) computes L_i(Œ±)

From `whir/src/poly_utils/multilinear.rs`:

```rust
pub fn eq_poly3(&self, mut point: usize) -> F {
    let two = F::ONE + F::ONE;
    let two_inv = two.inverse().unwrap();  // 1/2
    
    let mut acc = F::ONE;
    
    // For single variable, this iterates once
    for &val in self.0.iter().rev() {
        acc *= match point % 3 {
            0 => val_minus_one * val_minus_two * two_inv,  // (Œ±-1)(Œ±-2)/2
            1 => val * val_minus_two * (-F::ONE),          // -Œ±(Œ±-2)
            2 => val * val_minus_one * two_inv,            // Œ±(Œ±-1)/2
            _ => unreachable!(),
        };
        point /= 3;
    }
    
    acc
}
```

Where:
  - val = Œ±
  - val_minus_one = Œ± - 1
  - val_minus_two = Œ± - 2

## Circom Implementation Notes

To implement this in Circom:

```circom
// Inputs: h0, h1, h2 (each has c0, c1 for Goldilocks2)
//         alpha (also c0, c1)
// Output: h_alpha (c0, c1)

// Compute Œ± - 1
signal alpha_minus_1_c0 <== alpha_c0 - 1;
signal alpha_minus_1_c1 <== alpha_c1;

// Compute Œ± - 2
signal alpha_minus_2_c0 <== alpha_c0 - 2;
signal alpha_minus_2_c1 <== alpha_c1;

// Compute Lagrange basis L_0(Œ±) = (Œ±-1)(Œ±-2)/2
signal L0_temp <== (alpha_minus_1) * (alpha_minus_2);  // Product in extension field
signal L0 <== L0_temp / 2;

// Compute Lagrange basis L_1(Œ±) = -Œ±(Œ±-2)
signal L1_temp <== alpha * alpha_minus_2;              // Product in extension field
signal L1 <== -L1_temp;

// Compute Lagrange basis L_2(Œ±) = Œ±(Œ±-1)/2
signal L2_temp <== alpha * alpha_minus_1;              // Product in extension field
signal L2 <== L2_temp / 2;

// Final evaluation: h(Œ±) = h(0)¬∑L_0(Œ±) + h(1)¬∑L_1(Œ±) + h(2)¬∑L_2(Œ±)
signal h_alpha <== h0 * L0 + h1 * L1 + h2 * L2;       // All in extension field
```

**Important**: All operations must be performed in the Goldilocks quadratic extension field!

## Extension Field Arithmetic

For Goldilocks2, elements are represented as:
  x = c0 + c1 ¬∑ œâ

Where œâ¬≤ = 7 (the extension field generator).

Addition:
  (a0 + a1¬∑œâ) + (b0 + b1¬∑œâ) = (a0 + b0) + (a1 + b1)¬∑œâ

Multiplication:
  (a0 + a1¬∑œâ) ¬∑ (b0 + b1¬∑œâ) = (a0¬∑b0 + 7¬∑a1¬∑b1) + (a0¬∑b1 + a1¬∑b0)¬∑œâ

Where all operations are mod p (p = 2^64 - 2^32 + 1).

## Example from Log (2^18 instance, Initial Round, Sumcheck Round 0)

Input:
  h(0) = QuadExtField { c0: 12215205352063168883, c1: 15999710841798399566 }
  h(1) = QuadExtField { c0: 16944529998913458487, c1: 10458873399224807532 }
  h(2) = QuadExtField { c0: 16616127435142680230, c1: 10233929630653772961 }
  Œ±    = QuadExtField { c0: 4447428230166501187, c1: 8540227344758325703 }

Output:
  h(Œ±) = QuadExtField { c0: 8990233997910171714, c1: 7407899681650761744 }

This can be used as a test vector for Circom implementation!

===========================================

